name: Generate CLAUDE.md

on:
  push:
    branches: [main]
    paths: 
      - 'docs/RDS.md'
      - 'docs/FRS.md'
      - 'docs/persona-*.md'
      - 'AGENTS.md'
  pull_request:
    branches: [main]
    paths:
      - 'docs/RDS.md'
      - 'docs/FRS.md'
      - 'docs/persona-*.md'
      - 'AGENTS.md'
  workflow_dispatch:
    inputs:
      force_regenerate:
        description: 'Force regeneration even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  generate-claude:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm ci

      - name: Validate AGENTS.md structure
        run: |
          echo "üîç Validating AGENTS.md structure..."
          
          # Check if AGENTS.md exists
          if [[ ! -f AGENTS.md ]]; then
            echo "‚ùå AGENTS.md file not found"
            exit 1
          fi
          
          # Check if file is non-empty
          if [[ ! -s AGENTS.md ]]; then
            echo "‚ùå AGENTS.md file is empty"
            exit 1
          fi
          
          # Check if file starts with the required project heading
          if ! head -20 AGENTS.md | grep -q "^# AGENTS.md: AI Agent Constitution for React Design System Development"; then
            echo "‚ùå AGENTS.md does not start with the required project heading"
            echo "Expected: # AGENTS.md: AI Agent Constitution for React Design System Development"
            exit 1
          fi
          
          # Check basic markdown structure (has at least one heading)
          if ! grep -q "^#" AGENTS.md; then
            echo "‚ùå AGENTS.md does not contain any markdown headings"
            exit 1
          fi
          
          echo "‚úÖ AGENTS.md structure validated"

      - name: Check if regeneration needed
        id: check_changes
        run: |
          # Check if CLAUDE.md needs regeneration
          NEEDS_REGEN=false
          
          # Force regeneration if requested
          if [[ "${{ github.event.inputs.force_regenerate }}" == "true" ]]; then
            echo "üîÑ Force regeneration requested"
            NEEDS_REGEN=true
          fi
          
          # Check if source files changed
          if git diff --name-only HEAD~1 | grep -E "(docs/.*\.md|AGENTS\.md)"; then
            echo "üìù Source files changed, regeneration needed"
            NEEDS_REGEN=true
          fi
          
          # Check if CLAUDE.md is older than template
          if [[ AGENTS.md -nt CLAUDE.md ]]; then
            echo "‚è∞ AGENTS.md is newer than CLAUDE.md"
            NEEDS_REGEN=true
          fi
          
          echo "needs_regen=$NEEDS_REGEN" >> $GITHUB_OUTPUT

      - name: Generate CLAUDE.md
        if: steps.check_changes.outputs.needs_regen == 'true'
        run: |
          echo "üöÄ Generating CLAUDE.md from AGENTS.md template..."
          npm run generate:claude
          
          # Verify generation was successful
          if [[ ! -f CLAUDE.md ]]; then
            echo "‚ùå CLAUDE.md was not generated"
            exit 1
          fi
          
          # Check file size (should be substantial)
          FILE_SIZE=$(wc -c < CLAUDE.md)
          if [[ $FILE_SIZE -lt 1000 ]]; then
            echo "‚ùå Generated CLAUDE.md is too small ($FILE_SIZE bytes)"
            exit 1
          fi
          
          echo "‚úÖ CLAUDE.md generated successfully ($FILE_SIZE bytes)"

      - name: Validate generated content
        if: steps.check_changes.outputs.needs_regen == 'true'
        run: |
          echo "üîç Validating generated CLAUDE.md..."
          
          # Check for required sections
          REQUIRED_SECTIONS=(
            "# CLAUDE.md"
            "## 1. From RDS ‚Üí FRS Validation"
            "## 2. Architectural Overview"
            "Prime Directive"
          )
          
          for section in "${REQUIRED_SECTIONS[@]}"; do
            if ! grep -q "$section" CLAUDE.md; then
              echo "‚ùå Missing required section: $section"
              exit 1
            fi
          done
          
          # Check for unresolved placeholders
          if grep -q "{{" CLAUDE.md; then
            echo "‚ö†Ô∏è  Unresolved placeholders found:"
            grep -n "{{.*}}" CLAUDE.md || true
          fi
          
          # Validate UTF-8 encoding
          if ! file CLAUDE.md | grep -q "UTF-8"; then
            echo "‚ùå CLAUDE.md is not UTF-8 encoded"
            exit 1
          fi
          
          echo "‚úÖ Generated content validated"

      - name: Check for changes
        id: git_diff
        if: steps.check_changes.outputs.needs_regen == 'true'
        run: |
          git diff --exit-code CLAUDE.md > /dev/null || echo "has_changes=true" >> $GITHUB_OUTPUT

      - name: Commit generated CLAUDE.md
        if: steps.check_changes.outputs.needs_regen == 'true' && steps.git_diff.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add and commit the generated file
          git add CLAUDE.md
          git commit -m "chore: regenerate CLAUDE.md from AGENTS.md template

          ü§ñ Auto-generated via GitHub Actions
          
          - Source: AGENTS.md template
          - Trigger: ${{ github.event_name }}
          - Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          Co-authored-by: GitHub Action <action@github.com>"

      - name: Push changes
        if: steps.check_changes.outputs.needs_regen == 'true' && steps.git_diff.outputs.has_changes == 'true' && github.event_name == 'push'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Create Pull Request comment
        if: steps.check_changes.outputs.needs_regen == 'true' && steps.git_diff.outputs.has_changes == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ü§ñ CLAUDE.md Regenerated
              
              The CLAUDE.md file has been automatically regenerated from the AGENTS.md template due to changes in source files.
              
              **Changes detected in:**
              - ${{ github.event.pull_request.head.sha }}
              
              **Generated at:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
              
              Please review the generated changes to ensure they align with your architectural updates.`
            })

      - name: Summary
        run: |
          if [[ "${{ steps.check_changes.outputs.needs_regen }}" == "true" ]]; then
            if [[ "${{ steps.git_diff.outputs.has_changes }}" == "true" ]]; then
              echo "‚úÖ CLAUDE.md successfully regenerated and committed"
            else
              echo "‚ÑπÔ∏è  CLAUDE.md regenerated but no changes detected"
            fi
          else
            echo "‚ÑπÔ∏è  No regeneration needed - CLAUDE.md is up to date"
            fi